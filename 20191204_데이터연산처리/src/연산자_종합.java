/*
 * 데이터 저장(변수) --- 데이터 가공
 *											(연산자,제어문) -> 메소드 
 *변수 + 메소드 --> 클래스 (객체지향프로그램)
 *									---- 재사용, 수정, 				추가 가능하게 제작
 *											 (상속) (오버라이딩)(오버로딩)
 *									=> 설계 (인터페이스)
 *									=> 데이터 여러개 저장 => 자료구조
 *						------------------------------------- 라이브러리						
 *	연산자 ( 자바에서 제공하는 연산자)
 *단항연산자:=증감연산자 : 한개 증가, 한개 감소  / 전치 연산자 , 후치 연산자       
 *						=부정연산자 : ! = boolean만 사용  t>f, f>t
 *						=(type): cast연산자 (형변환 연산자)
 *						byte < char , short< int < long< float< double
 *						자동 형변환 (upcasting)
 *						강제 형변환 (downcasting)
 *				* 연산 => 같은 데이터형만 연산이 가능하다  ex) int+int ---double+double  ---> 10.5+10 (x) but 10.5+10.5(o)
 *					'A'+1 = 65 __> 이것이 자동 형변환   						* 즉, 큰 데이터형이 뭔지 알아야 한다.
 *					(int)10.5 + 10 => 20 ___> 강제 형변환
 *이항연산자:= 산술연산자 (+,-,/,%,*)
 *						=비트연산자 (&, |, ^)    								& : 직렬 (*)      	 | : 병렬 (+)
 *						=쉬프트연산자 x<<y => x*2의 y승 x>>y => x/2의y승   : 비트 이동 연산자 ( 이진법으로 계산된 값의 이동)
 *						= 비교연산자 (==(같다), != (같지않다), <(작다), >(크다), <=, >=)
 *							ex) 5==8 => false   ----- boolean 변수로 잡아야 된다 값이 참거짓으로 나오기 때문에
 *						=논리연산자 (&&,||)    = and , or 개념
 *						ex) true&&false -> f , true||flase -> t
 *
 *						=대입연산자 (=,+=,-=,*=,/= ... op=)
 *삼항연산자:  조건  ?   값1   : 값2 
 *						조건 true =  값1      조건false = 값2
 *						ex) 10%2==0>"짝수":"홀수"   ==> if ~else	
 *
 *					double d=123456.78;
 *					int a=(int)((d-123456)*100)     78 아니고 77이 답이다.
 */
public class 연산자_종합 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		double d=123456.78;
		 int a=(int)((d-123456)*100);
		 float e=123456.78f;
		 int b=(int)((e-123456)*100);
		 System.out.println(a);
		 System.out.println(b);
	}

}
