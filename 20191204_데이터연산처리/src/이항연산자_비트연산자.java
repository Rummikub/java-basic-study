/* 무조건 이진법으로 바꿔서 계산
 * 비트 계산   --> 0,1
 * =============
 * 			&      |      ^(xor)
 * =============
 * 0 0  	 0		0			0
 * =============
 * 0 1		0		1			1
 * =============
 * 1 0 		0		1			1
 * =============
 * 1 1		1		1			0	
 * =============
 * 
 * ex)   10 & 6    ===> 10 = 1010 ,  6= 0110    => 0010  = 2
 * 		10 | 6 =====> 1110 = 14
 * 		10 ^6 ====> 1100 = 12
 * 
 * 10의 음수 표현 -- 0x28  1010 (int는 32bit) 
 * 								================== 1의 보수를 취급
 * 									1111 0101
 * 								================== 2의 보수
 * 									1111 0101
 * 									+				1
 * 								==========
 * 									1111 0110      음수는 양수보다 +1이 많다 예) ~11= -12
  */
public class 이항연산자_비트연산자 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		 System.out.println(~11);
		 System.out.println(Integer.toBinaryString(-11));
		 int a=56& 17;
		 int b=56| 17;
		 int c=56^ 17;
		 System.out.println(a);
		 System.out.println(b);
		 System.out.println(c);
		 /*(
		  *  56=>2 진법          17=> 2진법
		  *  111000		x 			010001   010000 = 16	
		  * 
		  */
	}

}
